  $ ../../../../../../../install/default/bin/stanc --auto-format cjs-K.stan
data {
  int<lower=2> K;
  int<lower=0> I;
  array[I, K] int<lower=0, upper=1> X;
}
transformed data {
  array[I] int<lower=0, upper=K + 1> first;
  array[I] int<lower=0, upper=K + 1> last;
  array[K] int<lower=0, upper=I> n_captured;
  first <- rep_array(K + 1, I);
  last <- rep_array(0, I);
  for (i in 1 : I) {
    for (k in 1 : K) {
      if (X[i, k] == 1) {
        if (k < first[i]) 
          first[i] <- k;
        if (k > last[i]) 
          last[i] <- k;
      }
    }
  }
  n_captured <- rep_array(0, K);
  for (i in 1 : I) 
    for (k in 1 : K) 
      n_captured[k] <- n_captured[k] + X[i, k];
}
parameters {
  vector<lower=0, upper=1>[K - 1] phi;
  vector<lower=0, upper=1>[K] p;
}
transformed parameters {
  vector<lower=0, upper=1>[K] chi;
  {
    int k;
    chi[K] <- 1.0;
    k <- K - 1;
    while (k > 0) {
      chi[k] <- (1 - phi[k]) + phi[k] * (1 - p[k + 1]) * chi[k + 1];
      k <- k - 1;
    }
  }
}
model {
  for (i in 1 : I) {
    if (last[i] > 0) {
      for (k in (first[i] + 1) : last[i]) {
        increment_log_prob(log(phi[k - 1]));
        if (X[i, k] == 1) 
          increment_log_prob(log(p[k]));
        else 
          increment_log_prob(log1m(p[k]));
      }
      increment_log_prob(log(chi[last[i]]));
    }
  }
}
generated quantities {
  real beta;
  vector<lower=0>[K] pop_hat;
  beta <- phi[K - 1] * p[K];
  for (k in 1 : K) 
    pop_hat[k] <- n_captured[k] / p[k];
}

Warning in 'cjs-K.stan', line 18, column 8: assignment operator <- is deprecated in the Stan language; use = instead.
Warning in 'cjs-K.stan', line 19, column 7: assignment operator <- is deprecated in the Stan language; use = instead.
Warning in 'cjs-K.stan', line 24, column 19: assignment operator <- is deprecated in the Stan language; use = instead.
Warning in 'cjs-K.stan', line 26, column 18: assignment operator <- is deprecated in the Stan language; use = instead.
Warning in 'cjs-K.stan', line 31, column 13: assignment operator <- is deprecated in the Stan language; use = instead.
Warning in 'cjs-K.stan', line 34, column 20: assignment operator <- is deprecated in the Stan language; use = instead.
Warning in 'cjs-K.stan', line 46, column 11: assignment operator <- is deprecated in the Stan language; use = instead.
Warning in 'cjs-K.stan', line 47, column 6: assignment operator <- is deprecated in the Stan language; use = instead.
Warning in 'cjs-K.stan', line 49, column 13: assignment operator <- is deprecated in the Stan language; use = instead.
Warning in 'cjs-K.stan', line 50, column 8: assignment operator <- is deprecated in the Stan language; use = instead.
Warning in 'cjs-K.stan', line 58, column 8: increment_log_prob(...); is deprecated and will be removed in the future. Use target += ...; instead.
Warning in 'cjs-K.stan', line 60, column 10: increment_log_prob(...); is deprecated and will be removed in the future. Use target += ...; instead.
Warning in 'cjs-K.stan', line 62, column 10: increment_log_prob(...); is deprecated and will be removed in the future. Use target += ...; instead.
Warning in 'cjs-K.stan', line 64, column 6: increment_log_prob(...); is deprecated and will be removed in the future. Use target += ...; instead.
Warning in 'cjs-K.stan', line 73, column 7: assignment operator <- is deprecated in the Stan language; use = instead.
Warning in 'cjs-K.stan', line 76, column 15: assignment operator <- is deprecated in the Stan language; use = instead.
  $ ../../../../../../../install/default/bin/stanc --auto-format cjs.stan
data {
  array[7] int<lower=0> history;
}
parameters {
  array[2] real<lower=0, upper=1> phi;
  array[3] real<lower=0, upper=1> p;
}
transformed parameters {
  array[3] real<lower=0, upper=1> chi;
  chi[3] <- 1;
  chi[2] <- (1 - phi[2]) + phi[2] * (1 - p[3]);
  chi[1] <- (1 - phi[1]) + phi[1] * (1 - p[2]) * chi[2];
}
model {
  increment_log_prob(history[7]
                     * (log(phi[1]) + log(p[2]) + log(phi[2]) + log(p[3])));
  increment_log_prob(history[6] * (log(phi[1]) + log(p[2]) + log(chi[2])));
  increment_log_prob(history[5]
                     * (log(phi[1]) + log1m(p[2]) + log(phi[2]) + log(p[3])));
  increment_log_prob(history[4] * (log(chi[1])));
  increment_log_prob(history[3] * (log(phi[2]) + log(p[3])));
  increment_log_prob(history[2] * log(chi[2]));
}
generated quantities {
  real<lower=0, upper=1> beta3;
  beta3 <- phi[2] * p[3];
}

Warning in 'cjs.stan', line 22, column 9: assignment operator <- is deprecated in the Stan language; use = instead.
Warning in 'cjs.stan', line 23, column 9: assignment operator <- is deprecated in the Stan language; use = instead.
Warning in 'cjs.stan', line 24, column 9: assignment operator <- is deprecated in the Stan language; use = instead.
Warning in 'cjs.stan', line 27, column 2: increment_log_prob(...); is deprecated and will be removed in the future. Use target += ...; instead.
Warning in 'cjs.stan', line 28, column 2: increment_log_prob(...); is deprecated and will be removed in the future. Use target += ...; instead.
Warning in 'cjs.stan', line 29, column 2: increment_log_prob(...); is deprecated and will be removed in the future. Use target += ...; instead.
Warning in 'cjs.stan', line 30, column 2: increment_log_prob(...); is deprecated and will be removed in the future. Use target += ...; instead.
Warning in 'cjs.stan', line 31, column 2: increment_log_prob(...); is deprecated and will be removed in the future. Use target += ...; instead.
Warning in 'cjs.stan', line 32, column 2: increment_log_prob(...); is deprecated and will be removed in the future. Use target += ...; instead.
Warning in 'cjs.stan', line 37, column 8: assignment operator <- is deprecated in the Stan language; use = instead.
  $ ../../../../../../../install/default/bin/stanc --auto-format mark-recapture-2.stan
data {
  int<lower=0> M;
  int<lower=0> C;
  int<lower=0, upper=min(M, C)> R;
}
transformed data {
  real theta_max;
  theta_max <- M;
  theta_max <- theta_max / (C - R + M);
}
parameters {
  real<lower=0, upper=theta_max> theta;
}
model {
  R ~ binomial(C, theta);
}
generated quantities {
  real<lower=(C - R + M)> N;
  N <- M / theta;
}

Warning in 'mark-recapture-2.stan', line 8, column 12: assignment operator <- is deprecated in the Stan language; use = instead.
Warning in 'mark-recapture-2.stan', line 9, column 12: assignment operator <- is deprecated in the Stan language; use = instead.
Warning in 'mark-recapture-2.stan', line 19, column 4: assignment operator <- is deprecated in the Stan language; use = instead.
  $ ../../../../../../../install/default/bin/stanc --auto-format mark-recapture-3.stan
data {
  int<lower=0> M;
  int<lower=0> C;
  int<lower=0, upper=min(M, C)> R;
}
transformed data {
  real theta_max;
  theta_max <- M;
  theta_max <- theta_max / (C - R + M);
}
parameters {
  real<lower=(C - R + M)> N;
}
transformed parameters {
  real<lower=0, upper=theta_max> theta;
  theta <- M / N;
}
model {
  increment_log_prob(-2 * log(N));
  R ~ binomial(C, theta);
}

Warning in 'mark-recapture-3.stan', line 26, column 12: assignment operator <- is deprecated in the Stan language; use = instead.
Warning in 'mark-recapture-3.stan', line 27, column 12: assignment operator <- is deprecated in the Stan language; use = instead.
Warning in 'mark-recapture-3.stan', line 34, column 8: assignment operator <- is deprecated in the Stan language; use = instead.
Warning in 'mark-recapture-3.stan', line 37, column 2: increment_log_prob(...); is deprecated and will be removed in the future. Use target += ...; instead.
  $ ../../../../../../../install/default/bin/stanc --auto-format mark-recapture.stan
data {
  int<lower=0> M;
  int<lower=0> C;
  int<lower=0, upper=min(M, C)> R;
}
parameters {
  real<lower=(C - R + M)> N;
}
model {
  R ~ binomial(C, M / N);
}

